# author: René Wallor, 18.08.2021
# version: 0.21
# delete redundant characters, rename and add data

replace_all('title',"@","");
replace_all('title',"\[","");
replace_all('title',"\]","");
replace_all('title',"\<|\>","");
replace_all('address',"\[","");
replace_all('address',"\]","");
replace_all('number',"Band","");
replace_all('number',"Bd.","");
replace_all('number',"Volume","");
replace_all('number',"Vol.","");
replace_all('number',"vol.","");
replace_all('number',"volume","");
trim(number);
replace_all('pages',"Seiten","");
replace_all('pages',"S.","");
replace_all('pages',"S","");
replace_all('pages',"pages","");
replace_all('pages'," p","");
replace_all('pages',"\(","");
replace_all('pages',"\)","");
replace_all('pages',"1 Band","");
replace_all('pages',"Bl.","");
replace_all('pages',"Bl","");
replace_all('pages'," , zahlr. Ill.","");
replace_all('pages'," , zahlr. Ill","");
replace_all('pages'," , \überw. Noten","");
trim(pages);
replace_all('series',"@","");
replace_all('maintitle',"@","");
replace_all('eventtitle',"@","");
replace_all('journal',"@","");
replace_all('author.*','[0123456789]|!|@',"");
replace_all('editor.*','[0123456789]|!|@',"");
replace_all('author_afterword','[0123456789]|!|@',"");
replace_all('author_collaborator','[0123456789]|!|@',"");
replace_all('author_commentator','[0123456789]|!|@',"");
replace_all('author_compiled','[0123456789]|!|@',"");
replace_all('author_foreword','[0123456789]|!|@',"");
replace_all('author_illustrator','[0123456789]|!|@',"");
replace_all('author_introduction','[0123456789]|!|@',"");
replace_all('author_supervisor','[0123456789]|!|@',"");
replace_all('author_translator','[0123456789]|!|@',"");
replace_all('publisher',"\[|\]","");
replace_all('publisher',"@","");

# rename languages
replace_all('language',"ger","German");
replace_all('language',"eng","English");
replace_all('language',"fre","French");
replace_all('language',"qmo","Moldovan");
replace_all('language',"qmw","Mordivian");
replace_all('language',"qqa","Khakasian");
replace_all('language',"abk","Abkhazian");
replace_all('language',"afr","Afrikaans");
replace_all('language',"alb","Albanian");
replace_all('language',"sqi","Albanian");
replace_all('language',"ara","Arabic");
replace_all('language',"arm","Armenian");
replace_all('language',"hye","Armenian");
replace_all('language',"aus","Australian languages");
replace_all('language',"aze","Azerbaijani");
replace_all('language',"bat","Baltic languages");
replace_all('language',"bel","Belarusian");
replace_all('language',"ben","Bengali");
replace_all('language',"tib","Tibetan");
replace_all('language',"bos","Bosnian");
replace_all('language',"bul","Bulgarian");
replace_all('language',"cat","Catalan");
replace_all('language',"cze","Czech");
replace_all('language',"ces","Czech");
replace_all('language',"chi","Chinese");
replace_all('language',"zho","Chinese");
replace_all('language',"cnr","Montenegrin");
replace_all('language',"dan","Danish");
replace_all('language',"deu","German");
replace_all('language',"div","Maldivian");
replace_all('language',"dum","Dutch");
replace_all('language',"dut","Dutch");
replace_all('language',"nld","Dutch");
replace_all('language',"gre","Greek");
replace_all('language',"est","Estonian");
replace_all('language',"baq","Basque");
replace_all('language',"fin","Finnish");
replace_all('language',"geo","Georgian");
replace_all('language',"gle","Irish");
replace_all('language',"gre","Greek");
replace_all('language',"hrv","Croatian");
replace_all('language',"hun","Hungarian");
replace_all('language',"ice","Icelandic");
replace_all('language',"ita","Italian");
replace_all('language',"jpn","Japanese");
replace_all('language',"kan","Kannada");
replace_all('language',"kaz","Kazakh");
replace_all('language',"kir","Kirghiz");
replace_all('language',"kor","Korean");
replace_all('language',"lat","Latin");
replace_all('language',"lav","Latvian");
replace_all('language',"lit","Lithuanian");
replace_all('language',"mac","Macedonian");
replace_all('language',"mon","Mongolian");
replace_all('language',"nds","Low German");
replace_all('language',"nor","Norwegian");
replace_all('language',"rum","Romanian");
replace_all('language',"ron","Romanian");
replace_all('language',"rus","Russian");
replace_all('language',"sco","Scots");
replace_all('language',"slo","Slovak");
replace_all('language',"slk","Slovak");
replace_all('language',"spa","Spanish");
replace_all('language',"srp","Serbian");
replace_all('language',"swe","Swedish");
replace_all('language',"tlh","Klingon");
replace_all('language',"tur","Turkish");
replace_all('language',"ukr","Ukrainian");
replace_all('language',"yid","Yiddish");
replace_all('language',"pol","Polish");
replace_all('language',"per","Persian");


replace_all('language_original',"ger","German");
replace_all('language_original',"eng","English");
replace_all('language_original',"fre","French");
replace_all('language_original',"qmo","Moldovan");
replace_all('language_original',"qmw","Mordivian");
replace_all('language_original',"qqa","Khakasian");
replace_all('language_original',"abk","Abkhazian");
replace_all('language_original',"afr","Afrikaans");
replace_all('language_original',"alb","Albanian");
replace_all('language_original',"sqi","Albanian");
replace_all('language_original',"ara","Arabic");
replace_all('language_original',"arm","Armenian");
replace_all('language_original',"hye","Armenian");
replace_all('language_original',"aus","Australian languages");
replace_all('language_original',"aze","Azerbaijani");
replace_all('language_original',"bat","Baltic languages");
replace_all('language_original',"bel","Belarusian");
replace_all('language_original',"ben","Bengali");
replace_all('language_original',"tib","Tibetan");
replace_all('language_original',"bos","Bosnian");
replace_all('language_original',"bul","Bulgarian");
replace_all('language_original',"cat","Catalan");
replace_all('language_original',"cze","Czech");
replace_all('language_original',"ces","Czech");
replace_all('language_original',"chi","Chinese");
replace_all('language_original',"zho","Chinese");
replace_all('language_original',"cnr","Montenegrin");
replace_all('language_original',"dan","Danish");
replace_all('language_original',"deu","German");
replace_all('language_original',"div","Maldivian");
replace_all('language_original',"dum","Dutch");
replace_all('language_original',"dut","Dutch");
replace_all('language_original',"nld","Dutch");
replace_all('language_original',"gre","Greek");
replace_all('language_original',"est","Estonian");
replace_all('language_original',"baq","Basque");
replace_all('language_original',"fin","Finnish");
replace_all('language_original',"geo","Georgian");
replace_all('language_original',"gle","Irish");
replace_all('language_original',"gre","Greek");
replace_all('language_original',"hrv","Croatian");
replace_all('language_original',"hun","Hungarian");
replace_all('language_original',"ice","Icelandic");
replace_all('language_original',"ita","Italian");
replace_all('language_original',"jpn","Japanese");
replace_all('language_original',"kan","Kannada");
replace_all('language_original',"kaz","Kazakh");
replace_all('language_original',"kir","Kirghiz");
replace_all('language_original',"kor","Korean");
replace_all('language_original',"lat","Latin");
replace_all('language_original',"lav","Latvian");
replace_all('language_original',"lit","Lithuanian");
replace_all('language_original',"mac","Macedonian");
replace_all('language_original',"mon","Mongolian");
replace_all('language_original',"nds","Low German");
replace_all('language_original',"nor","Norwegian");
replace_all('language_original',"rum","Romanian");
replace_all('language_original',"ron","Romanian");
replace_all('language_original',"rus","Russian");
replace_all('language_original',"sco","Scots");
replace_all('language_original',"slo","Slovak");
replace_all('language_original',"slk","Slovak");
replace_all('language_original',"spa","Spanish");
replace_all('language_original',"srp","Serbian");
replace_all('language_original',"swe","Swedish");
replace_all('language_original',"tlh","Klingon");
replace_all('language_original',"tur","Turkish");
replace_all('language_original',"ukr","Ukrainian");
replace_all('language_original',"yid","Yiddish");
replace_all('language_original',"pol","Polish");
replace_all('language_original',"per","Persian");


# note
trim(note.*);

lookup('note.*','note.csv');
sort_field(note,numeric:1);
uniq(note);
join(note,", ");


# add country in articles from superordinated work
lookup('country','countrycodelist.csv');
split_field('country',', ');


# rename countrycode ISO DIN EN ISO 3166-1:1998 + DIN EN ISO 3166-3:2001 into RILM tags
replace_all('country.*',"XA-CH-AG","Switzerland");
replace_all('country.*',"XC-EG","Egypt");
replace_all('country.*',"XC-GQ","Equatorial Guinea");
replace_all('country.*',"XC-ET","Ethiopia");
replace_all('country.*',"XB-AF","Afghanistan");
replace_all('country.*',"XA-AX","Åland Islands");
replace_all('country.*',"XA-AL","Albania");
replace_all('country.*',"XC-DZ","Algeria");
replace_all('country.*',"XD-AS","American Samoa");
replace_all('country.*',"XA-AD","Andorra");
replace_all('country.*',"XC-AO","Angola");
replace_all('country.*',"XD-AI","Anguilla");
replace_all('country.*',"XI-AQ","Antarctica");
replace_all('country.*',"XD-AG","Antigua and Barbuda");
replace_all('country.*',"XA-CH-AR","Switzerland");
replace_all('country.*',"XA-CH-AI","Switzerland");
replace_all('country.*',"XD-AR","Argentina");
replace_all('country.*',"XB-AM","Armenia");
replace_all('country.*',"XD-AW","Aruba");
replace_all('country.*',"XB-AZ","Azerbaijan");
replace_all('country.*',"XE-AU","Australia");
replace_all('country.*',"XA-DE-BW","Germany");
replace_all('country.*',"XD-BS","Bahamas");
replace_all('country.*',"XB-BH","Bahrain");
replace_all('country.*',"XB-BD","Bangladesh");
replace_all('country.*',"XD-BB","Barbados");
replace_all('country.*',"XA-CH-BS","Switzerland");
replace_all('country.*',"XA-CH-BL","Switzerland");
replace_all('country.*',"XA-DE-BY","Germany");
replace_all('country.*',"XA-BE","Belgium");
replace_all('country.*',"XD-BZ","Belize");
replace_all('country.*',"XC-BJ","Benin");
replace_all('country.*',"XA-DE-BE","Germany");
replace_all('country.*',"XD-BM","Bermuda");
replace_all('country.*',"XB-BT","Bhutan");
replace_all('country.*',"XD-BO","Bolivia");
replace_all('country.*',"XD-BQ","Bonaire Sint Eustatius and Saba");
replace_all('country.*',"XA-BA","Bosnia and Herzegovina");
replace_all('country.*',"XC-BW","Botswana");
replace_all('country.*',"XK-BV","Bouvet Island");
replace_all('country.*',"XA-DE-BB","Germany");
replace_all('country.*',"XD-BR","Brazil");
replace_all('country.*',"XA-DE-HB","Germany");
replace_all('country.*',"XL-IO","British Indian Ocean Territory");
replace_all('country.*',"XB-BN","Brunei Darussalam");
replace_all('country.*',"XA-BG","Bulgaria");
replace_all('country.*',"XA-AT-1","Austria");
replace_all('country.*',"XC-BF","Burkina Faso");
replace_all('country.*',"XC-BI","Burundi");
replace_all('country.*',"XD-KY","Cayman Islands");
replace_all('country.*',"XD-CL","Chile");
replace_all('country.*',"XB-CN","China");
replace_all('country.*',"XE-CX","Christmas Island");
replace_all('country.*',"XE-CK","Cook Islands");
replace_all('country.*',"XD-CR","Costa Rica");
replace_all('country.*',"XD-CW","Curaçao");
replace_all('country.*',"XA-DK","Denmark");
replace_all('country.*',"XD-DM","Dominica");
replace_all('country.*',"XD-DO","Dominican Republic");
replace_all('country.*',"XC-DJ","Djibouti");
replace_all('country.*',"XD-EC","Ecuador");
replace_all('country.*',"XD-SV","El Salvador");
replace_all('country.*',"XC-ER","Eritrea");
replace_all('country.*',"XA-EE","Estonia");
replace_all('country.*',"XK-FO","Faroe Islands");
replace_all('country.*',"XK-FK","Falkland Islands");
replace_all('country.*',"XE-FJ","Fiji");
replace_all('country.*',"XA-FI","Finland");
replace_all('country.*',"XA-FR","France");
replace_all('country.*',"XL-TF","French Southern Territories");
replace_all('country.*',"XD-GF","French Guiana");
replace_all('country.*',"XE-PF","French Polynesia");
replace_all('country.*',"XC-GA","Gabon");
replace_all('country.*',"XC-GM","Gambia");
replace_all('country.*',"XB-GE","Georgia");
replace_all('country.*',"XC-GH","Ghana");
replace_all('country.*',"XA-GI","Gibraltar");
replace_all('country.*',"XD-GD","Grenada");
replace_all('country.*',"XA-GR","Greece");
replace_all('country.*',"XK-GL","Greenland");
replace_all('country.*',"XA-GB","United Kingdom");
replace_all('country.*',"XD-GP","Guadeloupe");
replace_all('country.*',"XE-GU","Guam");
replace_all('country.*',"XD-GT","Guatemala");
replace_all('country.*',"XA-GG","Guernsey");
replace_all('country.*',"XC-GN","Guinea");
replace_all('country.*',"XC-GW","Guinea-Bissau");
replace_all('country.*',"XD-GY","Guyana");
replace_all('country.*',"XD-HAT","Haiti");
replace_all('country.*',"XA-DE-HH","Germany");
replace_all('country.*',"XI-HM","Heard Island and McDonald Islands");
replace_all('country.*',"XA-DE-HE","Germany");
replace_all('country.*',"XD-HN","Honduras");
replace_all('country.*',"XB-HK","Hong Kong");
replace_all('country.*',"XB-IN","India");
replace_all('country.*',"XB-ID","Indonesia");
replace_all('country.*',"XB-IQ","Iraq");
replace_all('country.*',"XB-IR","Iran");
replace_all('country.*',"XA-IE","Ireland");
replace_all('country.*',"XA-IS","Iceland");
replace_all('country.*',"XA-IM","Isle of Man");
replace_all('country.*',"XB-IL","Israel");
replace_all('country.*',"XA-IT","Italy");
replace_all('country.*',"XD-JM","Jamaica");
replace_all('country.*',"XB-JP","Japan");
replace_all('country.*',"XB-YE","Yemen");
replace_all('country.*',"XA-JE","Jersey");
replace_all('country.*',"XB-JO","Jordan");
replace_all('country.*',"XA-AT-2","Austria");
replace_all('country.*',"XB-KH","Cambodia");
replace_all('country.*',"XC-CM","Cameroon");
replace_all('country.*',"XD-CA","Canada");
replace_all('country.*',"XA-CH-BE","Switzerland");
replace_all('country.*',"XA-CH-FR","Switzerland");
replace_all('country.*',"XA-CH-GE","Switzerland");
replace_all('country.*',"XA-CH-GL","Switzerland");
replace_all('country.*',"XA-CH-JU","Switzerland");
replace_all('country.*',"XA-CH-LU","Switzerland");
replace_all('country.*',"XA-CH-NE","Switzerland");
replace_all('country.*',"XB-KZ","Kazakhstan");
replace_all('country.*',"XB-QA","Qatar");
replace_all('country.*',"XC-KE","Kenya");
replace_all('country.*',"XB-KG","Kyrgyzstan");
replace_all('country.*',"XE-KI","Kiribati");
replace_all('country.*',"XE-CC","Cocos Islands");
replace_all('country.*',"XD-CO","Colombia");
replace_all('country.*',"XC-KM","Comoros");
replace_all('country.*',"XA-QV","Kosovo");
replace_all('country.*',"XA-HR","Croatia");
replace_all('country.*',"XD-CU","Cuba");
replace_all('country.*',"XB-KW","Kuwait");
replace_all('country.*',"XA-AT-5","Austria");
replace_all('country.*',"XB-LA","Laos");
replace_all('country.*',"XC-LS","Lesotho");
replace_all('country.*',"XA-LV","Latvia");
replace_all('country.*',"XB-LB","Lebanon");
replace_all('country.*',"XC-LR","Liberia");
replace_all('country.*',"XC-LY","Libya");
replace_all('country.*',"XA-LI","Liechtenstein");
replace_all('country.*',"XA-LT","Lithuania");
replace_all('country.*',"XA-LU","Luxembourg");
replace_all('country.*',"XB-MO","Macao");
replace_all('country.*',"XC-MG","Madagascar");
replace_all('country.*',"XC-MW","Malawi");
replace_all('country.*',"XB-MY","Malaysia");
replace_all('country.*',"XB-MV","Maldives");
replace_all('country.*',"XC-ML","Mali");
replace_all('country.*',"XA-MT","Malta");
replace_all('country.*',"XC-MA","Morocco");
replace_all('country.*',"XE-MH","Marshall Islands");
replace_all('country.*',"XD-MQ","Martinique");
replace_all('country.*',"XC-MR","Mauritania");
replace_all('country.*',"XC-MU","Mauritius");
replace_all('country.*',"XC-YT","Mayotte");
replace_all('country.*',"XA-DE-MV","Germany");
replace_all('country.*',"XD-MX","Mexico");
replace_all('country.*',"XM-MIUM","Midway Islands");
replace_all('country.*',"XC-MZ","Mozambique");
replace_all('country.*',"XA-MD","Moldova");
replace_all('country.*',"XA-MC","Monaco");
replace_all('country.*',"XB-MN","Mongolia");
replace_all('country.*',"XA-ME","Montenegro");
replace_all('country.*',"XD-MS","Montserrat");
replace_all('country.*',"XC-NA","Namibia");
replace_all('country.*',"XE-NR","Nauru");
replace_all('country.*',"XB-NP","Nepal");
replace_all('country.*',"XE-NC","New Caledonia");
replace_all('country.*',"XE-NZ","New Zealand");
replace_all('country.*',"XD-NI","Nicaragua");
replace_all('country.*',"XA-NL","Netherlands");
replace_all('country.*',"XA-AT-3","Austria");
replace_all('country.*',"XA-DE-NI","Germany");
replace_all('country.*',"XC-NE","Niger");
replace_all('country.*',"XC-NG","Nigeria");
replace_all('country.*',"XM-NU","Niue");
replace_all('country.*',"XE-MP","Northern Mariana Islands");
replace_all('country.*',"XB-KP","North Korea");
replace_all('country.*',"XA-MK","North Macedonia");
replace_all('country.*',"XA-DE-NW","Germany");
replace_all('country.*',"XE-NF","Norfolk Island");
replace_all('country.*',"XA-NO","Norway");
replace_all('country.*',"XA-AT-4","Austria");
replace_all('country.*',"XA-CH-OW","Switzerland");
replace_all('country.*',"XA-AAAT","Austria");
replace_all('country.*',"XB-OM","Oman");
replace_all('country.*',"XB-PK","Pakistan");
replace_all('country.*',"XE-PW","Palau");
replace_all('country.*',"XD-PA","Panama");
replace_all('country.*',"XE-PG","Papua New Guinea");
replace_all('country.*',"XD-PY","Paraguay");
replace_all('country.*',"XD-PE","Peru");
replace_all('country.*',"XB-PH","Philippines");
replace_all('country.*',"XM-PN","Pitcairn");
replace_all('country.*',"XA-PL","Poland");
replace_all('country.*',"XA-PT","Portugal");
replace_all('country.*',"XD-PR","Puerto Rico");
replace_all('country.*',"XC-CG","Congo");
replace_all('country.*',"XL-RE","Réunion");
replace_all('country.*',"XA-DE-RP","Germany");
replace_all('country.*',"XA-RO","Romania");
replace_all('country.*',"XA-RU","Russian Federation");
replace_all('country.*',"XC-RW","Rwanda");
replace_all('country.*',"XA-DE-SL","Germany");
replace_all('country.*',"XA-DE-SN","Germany");
replace_all('country.*',"XA-DE-ST","Germany");
replace_all('country.*',"XD-KN","Saint Kitts and Nevis");
replace_all('country.*',"XD-LC","Saint Lucia");
replace_all('country.*',"XD-VC","Saint Vincent and the Grenadines");
replace_all('country.*',"XD-BL","Saint Barthélemy");
replace_all('country.*',"XD-MF","Saint Martin");
replace_all('country.*',"XD-PM","Saint Pierre and Miquelon");
replace_all('country.*',"XE-SB","Solomon Islands");
replace_all('country.*',"XC-ZM","Zambia");
replace_all('country.*',"XA-SM","San Marino");
replace_all('country.*',"XC-ST","Sao Tome and Principe");
replace_all('country.*',"XB-SA","Saudi Arabia");
replace_all('country.*',"XA-DE-SH","Germany");
replace_all('country.*',"XA-SE","Sweden");
replace_all('country.*',"XC-SN","Senegal");
replace_all('country.*',"XA-RS","Serbia");
replace_all('country.*',"XC-SC","Seychelles");
replace_all('country.*',"XC-SL","Sierra Leone");
replace_all('country.*',"XC-ZW","Zimbabwe");
replace_all('country.*',"XB-SG","Singapore");
replace_all('country.*',"XD-SX","Sint Maarten");
replace_all('country.*',"XA-SK","Slovakia");
replace_all('country.*',"XA-SI","Slovenia");
replace_all('country.*',"XC-SO","Somalia");
replace_all('country.*',"XA-ES","Spain");
replace_all('country.*',"XB-LK","Sri Lanka");
replace_all('country.*',"XC-SS","South Sudan");
replace_all('country.*',"XA-AT-6","Austria");
replace_all('country.*',"XC-SD","Sudan");
replace_all('country.*',"XC-ZA","South Africa");
replace_all('country.*',"XK-GS","South Georgia and the South Sandwich Islands");
replace_all('country.*',"XB-KR","South Korea");
replace_all('country.*',"XD-SR","Suriname");
replace_all('country.*',"XK-SJ","Svalbard and Jan Mayen");
replace_all('country.*',"XC-SZ","Eswatini");
replace_all('country.*',"XB-SY","Syrian Arab Republic");
replace_all('country.*',"XB-TJ","Tajikistan");
replace_all('country.*',"XB-TW","Taiwan");
replace_all('country.*',"XC-TZ","Tanzania");
replace_all('country.*',"XA-CH-TI","Switzerland");
replace_all('country.*',"XB-TH","Thailand");
replace_all('country.*',"XA-DE-TH","Germany");
replace_all('country.*',"XA-CH-TG","Switzerland");
replace_all('country.*',"XA-AT-7","Austria");
replace_all('country.*',"XC-TG","Togo");
replace_all('country.*',"XE-TK","Tokelau");
replace_all('country.*',"XE-TO","Tonga");
replace_all('country.*',"XD-TT","Trinidad and Tobago");
replace_all('country.*',"XC-TD","Chad");
replace_all('country.*',"XA-CZ","Czechia");
replace_all('country.*',"XB-TR","Turkey");
replace_all('country.*',"XC-TN","Tunisia");
replace_all('country.*',"XB-TM","Turkmenistan");
replace_all('country.*',"XD-TC","Turks and Caicos Islands");
replace_all('country.*',"XE-TV","Tuvalu");
replace_all('country.*',"XC-UG","Uganda");
replace_all('country.*',"XA-UA","Ukraine");
replace_all('country.*',"XA-HU","Hungary");
replace_all('country.*',"XD-UY","Uruguay");
replace_all('country.*',"XD-US","USA");
replace_all('country.*',"XB-ZU","Uzbekistan");
replace_all('country.*',"XE-VU","Vanuatu");
replace_all('country.*',"XD-VE","Venezuela");
replace_all('country.*',"XB-VN","Viet Nam");
replace_all('country.*',"XA-AT-8","Austria");
replace_all('country.*',"XE-WF","Wallis and Futuna");
replace_all('country.*',"XA-BY","Belarus");
replace_all('country.*',"XC-EH","Western Sahara");
replace_all('country.*',"XA-AT-9","Austria");
replace_all('country.*',"XC-CF","Central African Republic");
replace_all('country.*',"XA-CY","Cyprus");
replace_all('country.*',"XA-DXDE","Germany");
replace_all('country.*',"XA-DDDE","GDR");
replace_all('country.*',"XA-YUCS","Yugoslavia");
replace_all('country.*',"XA-CSXX","Serbia and Montenegro");
replace_all('country.*',"XA-SUHH","USSR");
replace_all('country.*',"XA-CSHH","Czechoslovakia");
replace_all('country.*',"XB-VDVN","Viet-Nam");
replace_all('country.*',"XA-BYAA","Byelorussian SSR");
replace_all('country.*',"XA-DE","Germany");
replace_all('country.*',"XA-CH","Switzerland");
replace_all('country.*',"XA-AT","Austria");

# rename document types into RILM tags
replace_all('type',"[A,C,E,H,S,Z][a,d,f,F,v]","book");
replace_all('type',"O[a,f,F]","er");
replace_all('type',"[A,C,E,H,O,S,Z]b","journal");
replace_all('type',"sb","collection");
replace_all('type',"Konferenzschrift","proceedings");
replace_all('type',"Festschrift","be");
replace_all('type',"reJ","review");
replace_all('type',"reB","review");
replace_all('type',"J","article");
replace_all('type',"B","incollection");
replace_all('type',"P","inproceeding");


# rename abstractor into RILM tags
replace_all('abstractor',"Autorin","author");
replace_all('abstractor',"autorin","author");
replace_all('abstractor',"Autoren","authors");
replace_all('abstractor',"autoren","authors");
replace_all('abstractor',"Autor","author");
replace_all('abstractor',"autor","author");
replace_all('abstractor',"Verlag","publisher");
replace_all('abstractor',"Vorlage","publisher");
replace_all('abstractor',"Voorlage","publisher");
replace_all('abstractor',"Voelage","publisher");
replace_all('abstractor',"Hrsg.","publisher");
replace_all('abstractor',"Hrsg","publisher");
replace_all('abstractor',"Herausgeber","publisher");
replace_all('abstractor',"Herausgeberin","publisher");
replace_all('abstractor',"Internet","author");
replace_all('abstractor',"SLUB Qucosa","publisher");
replace_all('abstractor',"; gek.*","");
replace_all('abstractor',", gek.*","");


uniq(country);
join(country,", ");

# rename type in RILM tags
#replace_all('type',"book","bm");
#replace_all('type',"journal","bp");
#replace_all('type',"article","ap");



vacuum();

